name: Build, lint and test
on: [push]
env:
  MIX_ENV: test
jobs:
  build:
    name: Build, lint and test
    runs-on: ubuntu-latest
    # services:
    #   db:
    #     image: postgres:11
    #     ports: ["5432:5432"]
    #     env:
    #       POSTGRES_PASSWORD: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: "1.13.4"
          otp-version: "24.2"
      - name: Restore dependencies cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: $-mix-
      - name: Install dependencies
        run: docker-compose run --rm app mix deps.get
      - name: Check for outdated deps
        run: docker-compose run --rm app mix hex.outdated
      - name: Compile
        # run: docker-compose run -e MIX_ENV=dev --rm app mix compile --warnings-as-errors
        run: |
          docker-compose run -e MIX_ENV=prod --rm app mix compile --warnings-as-errors
          docker-compose run -e MIX_ENV=test --rm app mix compile --warnings-as-errors
          docker-compose run -e MIX_ENV=dev --rm app mix compile --warnings-as-errors
      - name: Lint
        run: docker-compose run --rm app mix format --check-formatted
      - name: Credo
        run: docker-compose run --rm app mix credo --strict
      - name: Run test
        run: |
          docker-compose run --rm app mix ecto.create
          docker-compose run --rm app mix ecto.migrate
          docker-compose run --rm app mix coveralls